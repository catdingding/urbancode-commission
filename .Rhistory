para.cnt<-length(para.ind)-1
para.list<-rep(list(NULL),para,cnt)
for(i in 1:para.cnt){
para.list[[i]]<-section.df[para.ind[i]:(para.ind[i+1]-1),]
}
para.ind
section.df[grep(paste("(十)?",zh_number,"、",collapse="|",sep=""),section.df[,1]),]
c(1,section.df[grep(paste("(十)?",zh_number,"、",collapse="|",sep=""),section.df[,1]),])
para.ind<-c(1,grep(paste("(十)?",zh_number,"、",collapse="|",sep=""),section.df[,1]),nrow(section.df))
para.ind
para.cnt<-length(para.ind)-1
para.list<-rep(list(NULL),para,cnt)
for(i in 1:para.cnt){
para.list[[i]]<-section.df[para.ind[i]:(para.ind[i+1]-1),]
}
para.list<-rep(list(NULL),para.cnt)
for(i in 1:para.cnt){
para.list[[i]]<-section.df[para.ind[i]:(para.ind[i+1]-1),]
}
para.list
para.ind
para.ind[1]
para.ind[[1]
para.list[1]
para.list[2]
section.list
1:para.cnt+1
for(i in 1:para.cnt+1){
para.list[[i]]<-section.df[para.ind[i-1]:(para.ind[i]-1),]
}
para.list
source('E:/SkyDrive/GitHub/urbancode-commission/html_to_md.R', encoding = 'UTF-8')
for(i in 1:para.cnt+1){
para.list[[i]]<-section.df[para.ind[i-1]:(para.ind[i]),]
}
source('E:/SkyDrive/GitHub/urbancode-commission/html_to_md.R', encoding = 'UTF-8')
para.list
source('E:/SkyDrive/GitHub/urbancode-commission/html_to_md.R', encoding = 'UTF-8')
for(i in 1:para.cnt){
para.list[[i]]<-section.df[para.ind[i]:(para.ind[i+1]),]
}
para.list
for(i in 1:para.cnt){
para.list[[i]]<-section.df[para.ind[i]:(para.ind[i+1]-1),]
}
para.list
source('E:/SkyDrive/GitHub/urbancode-commission/html_to_md.R', encoding = 'UTF-8')
for(i in 1:para.cnt){
para.list[[i]]<-section.df[para.ind[i]:(para.ind[i+1]-1),]
if(i==para.cnt){para.list[[i]]<-rbind(para.list[[i]],section.df[nrow(section.df),])}
}
para.list
for(i in 1:para.cnt){
para.list[[i]]<-section.df[para.ind[i]:(para.ind[i+1]-1),]
##if(i==para.cnt){para.list[[i]]<-rbind(para.list[[i]],section.df[nrow(section.df),])}
}
para.lisyt
para.listt
para.list
para.ind<-c(1,grep(paste("(十)?",zh_number,"、",collapse="|",sep=""),section.df[,1]),nrow(section.df))
para.cnt<-length(para.ind)-1
para.list<-rep(list(NULL),para.cnt)
for(i in 1:para.cnt){
para.list[[i]]<-section.df[para.ind[i]:(para.ind[i+1]-1),]
##if(i==para.cnt){para.list[[i]]<-rbind(para.list[[i]],section.df[nrow(section.df),])}
}
para.list
para.ind<-c(1,grep(paste("(十)?",zh_number,"、",collapse="|",sep=""),section.df[,1]),nrow(section.df))
para.cnt<-length(para.ind)-1
para.list<-rep(list(NULL),para.cnt)
for(i in 1:para.cnt){
para.list[[i]]<-section.df[para.ind[i]:(para.ind[i+1]-1),]
if(i==para.cnt){para.list[[i]]<-rbind(para.list[[i]],section.df[nrow(section.df),])}
}
para.list
para.ind<-c(1,grep(paste("(十)?",zh_number,"、",collapse="|",sep=""),section.df[,1]),nrow(section.df)+1)
para.cnt<-length(para.ind)-1
para.list<-rep(list(NULL),para.cnt)
for(i in 1:para.cnt){
para.list[[i]]<-section.df[para.ind[i]:(para.ind[i+1]-1),]
##if(i==para.cnt){para.list[[i]]<-rbind(para.list[[i]],section.df[nrow(section.df),])}
}
para.list
library(bitops)
library(RCurl)
library(XML)
library(plyr)
flist.df<-data.frame(fname=gsub("^(.*?)\\..*","\\1",dir("./record/tpup/html/tpup672.pdf/")),ftype=gsub(".*\\.(.*?)$","\\1",dir("./record/tpup/html/tpup672.pdf/")),stringsAsFactors = FALSE)
flist.df$docuID<-as.integer(substr(flist.df[,1],5,length(flist.df[,1])))
flist.df<-subset(flist.df,flist.df[,2]=="html")
flist.df<-arrange(flist.df,flist.df[,3])
flist.df<-flist.df[complete.cases(flist.df),]
for(i in 1:nrow(flist.df)){
get_url<-paste("./record/tpup/html/tpup672.pdf/",flist.df[i,1],".",flist.df[i,2],sep="")
html.parse<-htmlParse(get_url,encoding="utf-8")
parse.txt<-xpathSApply(html.parse,"//div[@class='txt']",xmlValue)
parse.loc<-xpathSApply(html.parse,"//div[@class='txt']",xmlAttrs)
parse.loc.left<-as.integer(gsub(".*left:(.*?)px;.*","\\1",parse.loc[2,]))
parse.loc.top<-as.integer(gsub(".*top:(.*?)px;.*","\\1",parse.loc[2,]))
parse.df<-data.frame(txt=parse.txt,loc.left=parse.loc.left,loc.top=parse.loc.top,stringsAsFactors=FALSE)
if(!exists("parse.done")){parse.done<-parse.df}else{parse.done<-rbind(parse.done,parse.df)}
}
zh_number_cap<-c("壹","貳","參","肆","伍","陸","柒","捌","玖","拾")
zh_number<-c("一","二","三","四","五","六","七","八","九","十")
item.ind<-c(1,grep(paste("^",zh_number_cap,collapse="|",sep=""),parse.done[,1]),nrow(parse.done)+1)
item.cnt<-length(item.ind)-1
item.list<-rep(list(NULL),item.cnt)
for(i in 1:item.cnt){
item.list[[i]]<-parse.done[item.ind[i]:(item.ind[i+1]-1),]
}
item.list
item.list[[1]]
item.list[[2]]
item.df<-item.list[[2]]
case.ind<-c(grep("^審議事項",item.df[,1]),nrow(item.df)+1)
case.cnt<-length(case.ind)-1
case.list<-rep(list(NULL),case.cnt)
for(i in 1:case.cnt){
case.list[[i]]<-item.df[case.ind[i]:(case.ind[i+1]-1),]
}
case.list
case.list[[1]]
head(case.list[[1]])
head(case.list[[2]])
case.df<-case.list[[2]]
table.ind<-grep("意見綜理表$",case.df[,1])
content.list<-list(case.df[1:(table.ind-1),],case.df[table.ind:nrow(case.df),])
section.ind<-c(1,grep("說明：$|^決議：|決議：$",content.list[[1]][,1]),nrow(content.list[[1]])+1)
section.cnt<-length(section.ind)-1
section.list<-rep(list(NULL),section.cnt)
for(i in 1:section.cnt){
section.list[[i]]<-content.list[[1]][section.ind[i]:(section.ind[i+1]-1),]
}
content.list[[1]]<-section.list
content.list[[1]]
head(content.list[[1]])
head(content.list[[2]])
head(content.list[[1]][1])
head(content.list[[1]][2])
content.list[[1]][3]
content.list[[1]][2]
head(content.list[[1]][2])
head(content.list[[1]][1])
head(content.list[[2]])
head(content.list[[1]][[1]])
head(content.list[[1]][[2]])
section.df<-content.list[[1]][[2]]
para.ind<-c(1,grep(paste("(十)?",zh_number,"、",collapse="|",sep=""),section.df[,1]),nrow(section.df)+1)
para.cnt<-length(para.ind)-1
para.list<-rep(list(NULL),para.cnt)
for(i in 1:para.cnt){
para.list[[i]]<-section.df[para.ind[i]:(para.ind[i+1]-1),]
##if(i==para.cnt){para.list[[i]]<-rbind(para.list[[i]],section.df[nrow(section.df),])}
}
para.list
source('E:/SkyDrive/GitHub/urbancode-commission/html_to_md.R', encoding = 'UTF-8')
source('E:/SkyDrive/GitHub/urbancode-commission/html_to_md.R', encoding = 'UTF-8')
content.list[[1]]
length(content.list[[1]])
?apply
lapply
?lapply
content[[1]]
content.list[[1]]
lapply(content.list[[1]],paragraph.parse)
source('E:/SkyDrive/GitHub/urbancode-commission/html_to_md.R', encoding = 'UTF-8')
content.list[[1]][,paragraph.parse]1]
content.list[[1]][1]
lapply(content.list[[1]][1],paragraph.parse)
lapply(content.list[[1]][[1]],paragraph.parse)
?sapply
sapply(content.list[[1]][[1]],paragraph.parse)
sapply(content.list[[1]],paragraph.parse)
vapply
?vapply
apply(content.list[[1]],paragraph.parse)
vapply(content.list[[1]],paragraph.parse)
sapply(content.list[[1]],paragraph.parse)
lapply(content.list[[1]],paragraph.parse)
content.list
content.list[1]
lapply(content.list[1],paragraph.parse)
apply(content.list[1],paragraph.parse)
sapply(content.list[1],paragraph.parse)
content.list[[1][]
rep(list(NULL),item.cnt)
rep(NULL,item.cnt)
list(rep(NULL,item.cnt))
as.list(rep(NULL,item.cnt))
para.list<-as.list(rep(NULL,para.cnt))
for(i in 1:para.cnt){
para.list[i]<-section.df[para.ind[i]:(para.ind[i+1]-1),]
}
warnings()
para.list
warnings()
para.list
rep(data.frame(NULL),para.cnt)
as.list(rep(data.frame(NULL),para.cnt))
para.list<-as.list(rep(NULL,para.cnt))
for(i in 1:para.cnt){
para.list[i]<-section.df[para.ind[i]:(para.ind[i+1]-1),]
}
para.list
section.df
para.list
para.list[[1]]
rep(NULL,para.cnt)
rep(data.frame(NULL),para.cnt)
?list
para.list<-list(NULL)
for(i in 1:para.cnt){
para.list[i]<-section.df[para.ind[i]:(para.ind[i+1]-1),]
}
para.ind<-c(1,grep(paste("(十)?",zh_number,"、",collapse="|",sep=""),section.df[,1]),nrow(section.df)+1)
para.cnt<-length(para.ind)-1
para.list<-list(NULL)
for(i in 1:para.cnt){
para.list[i]<-section.df[para.ind[i]:(para.ind[i+1]-1),]
}
para.list
?nulldataframe
??nulldataframe
rep(data.frame(txt=character(),loc.left=integer(),loc.top=integer()),para.cnt)
as.list(rep(data.frame(txt=character(),loc.left=integer(),loc.top=integer()),para.cnt))
data.frame(txt=character(),loc.left=integer(),loc.top=integer())
?rep
??replicatedataframe
rep(data.frame(txt=character(),loc.left=integer(),loc.top=integer()),para.cnt)
class(rep(data.frame(txt=character(),loc.left=integer(),loc.top=integer()),para.cnt))
rep(data.frame(txt=character(),loc.left=integer(),loc.top=integer()),para.cnt)[[1]]
rep(data.frame(txt=character(),loc.left=integer(),loc.top=integer()),para.cnt)[1
]
para.ind<-c(1,grep(paste("(十)?",zh_number,"、",collapse="|",sep=""),section.df[,1]),nrow(section.df)+1)
para.cnt<-length(para.ind)-1
para.list<-list(NULL)
for(i in 1:para.cnt){
para.list[[i]]<-section.df[para.ind[i]:(para.ind[i+1]-1),]
}
para.list
para.list[[1]]
para.list[1]
para.list[2]
para.list[3]
para.list[[2]]
as.data.frame(para.list[1])
para.list[1]<-as.data.frame(para.list[1])
?list
df1 <- data.frame(c(1,2,3), c(4,5,6))
df2 <- data.frame(c(11,22,33), c(44,55,66))
l = list(df1, df2)
l
?mapply
para.ind<-c(1,grep(paste("(十)?",zh_number,"、",collapse="|",sep=""),section.df[,1]),nrow(section.df)+1)
para.cnt<-length(para.ind)-1
para.list<-rep(list(NULL),para.cnt)
for(i in 1:para.cnt){
para.list[[i]]<-section.df[para.ind[i]:(para.ind[i+1]-1),]
}
para.list
content.list[[1]]
source('E:/SkyDrive/GitHub/urbancode-commission/html_to_md.R', encoding = 'UTF-8')
mapply(paragraph_parse,content.list[[1]])
mapply(paragraph_parse,content.list[[1]][1])
mapply(paragraph_parse,content.list[[1]][2])
lapply(paragraph_parse,content.list[[1]][2])
lapply(paragraph_parse,content.list[[1]][1])
?lapply
mapply(content.list[[1]],paragraph_parse)
lapply(content.list[[1]],paragraph_parse)
source('E:/SkyDrive/GitHub/urbancode-commission/html_to_md.R', encoding = 'UTF-8')
content.list[[1]]
content.list[[1]][1]
content.list[[1]][2]
head(content.list[[1]][2])
head(content.list[[1]][[2])
head(content.list[[1]][[2]])
test<-paragraph_parse(content.list[[1]][[1]])
test
test<-paragraph_parse(content.list[[1]][[2]])
test
content.list[[1]][[2]]
source('E:/SkyDrive/GitHub/urbancode-commission/html_to_md.R', encoding = 'UTF-8')
debug(paragraph_parse)
test<-paragraph_parse(content.list[[1]][[2]])
source('E:/SkyDrive/GitHub/urbancode-commission/html_to_md.R', encoding = 'UTF-8')
test<-paragraph_parse(content.list[[1]][[2]])
test
lapply(content.list[[1]],paragraph.parse)
lapply(content.list[[1]],paragraph_parse)
source('E:/SkyDrive/GitHub/urbancode-commission/html_to_md.R', encoding = 'UTF-8')
table.ind<-grep("意見綜理表$",case.df[,1])
content.list<-list(case.df[1:(table.ind-1),],case.df[table.ind:nrow(case.df),])
section.ind<-c(1,grep("說明：$|^決議：|決議：$",content.list[[1]][,1]),nrow(content.list[[1]])+1)
section.cnt<-length(section.ind)-1
section.list<-rep(list(NULL),section.cnt)
for(i in 1:section.cnt){
section.list[[i]]<-content.list[[1]][section.ind[i]:(section.ind[i+1]-1),]
}
content.list[[1]]<-section.list
content.list[[1]]<-lapply(content.list[[1]],paragraph_parse)
content.list[[1]]
case.list
content.list
source('E:/SkyDrive/GitHub/urbancode-commission/html_to_md.R', encoding = 'UTF-8')
case.list
case_parse(case.list[[1]])
test<-case_parse(case.list[[1]])
View(test)
source('E:/SkyDrive/GitHub/urbancode-commission/html_to_md.R', encoding = 'UTF-8')
test<-case_parse(case.list[[1]])
test
test<-case_parse(case.list[[2]])
test
source('E:/SkyDrive/GitHub/urbancode-commission/html_to_md.R', encoding = 'UTF-8')
item.list
item.list[[1]]
item.list[[2]]
item.list[[3]]
parse.done
item.list[[3]]
item.ind
parse.done[item.ind,]
library(bitops)
library(RCurl)
library(XML)
library(plyr)
flist.df<-data.frame(fname=gsub("^(.*?)\\..*","\\1",dir("./record/tpup/html/tpup672.pdf/")),ftype=gsub(".*\\.(.*?)$","\\1",dir("./record/tpup/html/tpup672.pdf/")),stringsAsFactors = FALSE)
flist.df$docuID<-as.integer(substr(flist.df[,1],5,length(flist.df[,1])))
flist.df<-subset(flist.df,flist.df[,2]=="html")
flist.df<-arrange(flist.df,flist.df[,3])
flist.df<-flist.df[complete.cases(flist.df),]
for(i in 1:nrow(flist.df)){
get_url<-paste("./record/tpup/html/tpup672.pdf/",flist.df[i,1],".",flist.df[i,2],sep="")
html.parse<-htmlParse(get_url,encoding="utf-8")
parse.txt<-xpathSApply(html.parse,"//div[@class='txt']",xmlValue)
parse.loc<-xpathSApply(html.parse,"//div[@class='txt']",xmlAttrs)
parse.loc.left<-as.integer(gsub(".*left:(.*?)px;.*","\\1",parse.loc[2,]))
parse.loc.top<-as.integer(gsub(".*top:(.*?)px;.*","\\1",parse.loc[2,]))
parse.df<-data.frame(txt=parse.txt,loc.left=parse.loc.left,loc.top=parse.loc.top,stringsAsFactors=FALSE)
if(!exists("parse.done")){parse.done<-parse.df}else{parse.done<-rbind(parse.done,parse.df)}
}
zh_number_cap<-c("壹","貳","參","肆","伍","陸","柒","捌","玖","拾")
zh_number<-c("一","二","三","四","五","六","七","八","九","十")
item.ind<-c(1,grep(paste("^",zh_number_cap,collapse="|",sep=""),parse.done[,1]),nrow(parse.done)+1)
item.cnt<-length(item.ind)-1
item.list<-rep(list(NULL),item.cnt)
for(i in 1:item.cnt){
item.list[[i]]<-parse.done[item.ind[i]:(item.ind[i+1]-1),]
}
}
zh_number_cap<-c("壹","貳","參","肆","伍","陸","柒","捌","玖","拾")
zh_number<-c("一","二","三","四","五","六","七","八","九","十")
item.ind<-c(1,grep(paste("^",zh_number_cap,collapse="|",sep=""),parse.done[,1]),nrow(parse.done)+1)
item.cnt<-length(item.ind)-1
item.list<-rep(list(NULL),item.cnt)
for(i in 1:item.cnt){
item.list[[i]]<-parse.done[item.ind[i]:(item.ind[i+1]-1),]
}
item.list
source('E:/SkyDrive/GitHub/urbancode-commission/html_to_md.R', encoding = 'UTF-8')
item[[2]]<-item_parse(item[[2]])
item.list[[2]]<-item_parse(item.list[[2]])
item.list
item.list[[2]]
item.list[[1]]
item.list[[2]][[1]]
item.list[[2]][[1]][[1]]
item.list[[2]][[1]]
source('E:/SkyDrive/GitHub/urbancode-commission/html_to_md.R', encoding = 'UTF-8')
item[[2]]<-item_parse(item[[2]])
item.list[[2]]<-item_parse(item.list[[2]])
item.ind<-c(1,grep(paste("^",zh_number_cap,collapse="|",sep=""),parse.done[,1]),nrow(parse.done)+1)
item.cnt<-length(item.ind)-1
item.list<-rep(list(NULL),item.cnt)
for(i in 1:item.cnt){
item.list[[i]]<-parse.done[item.ind[i]:(item.ind[i+1]-1),]
}
item.list[[2]]<-item_parse(item.list[[2]])
item.list[[2]]
item.list[[2]][[1]]
item.list[[2]][[1]][[1]]
item.list[[2]][[1]][[2]]
source('E:/SkyDrive/GitHub/urbancode-commission/html_to_md.R', encoding = 'UTF-8')
source('E:/SkyDrive/GitHub/urbancode-commission/html_to_md.R', encoding = 'UTF-8')
source('E:/SkyDrive/GitHub/urbancode-commission/html_to_md.R', encoding = 'UTF-8')
html_parse()
source('E:/SkyDrive/GitHub/urbancode-commission/html_to_md.R', encoding = 'UTF-8')
html_parse()
source('E:/SkyDrive/GitHub/urbancode-commission/html_to_md.R', encoding = 'UTF-8')
html_parse()
source('E:/SkyDrive/GitHub/urbancode-commission/html_to_md.R', encoding = 'UTF-8')
debug(paragraph_parse)
html_parse()
para.list
debug(case_parse)
html_parse()
content.list[[1]]
content.list[[1]][[1]]
content.list[[1]][1]
content.list[[1]][[1]]
content.list[[1]][[2]]
content.list[[1]][[3]]
content.list[[1]][[3]][[1]]
content.list[[1]][[3]][1,1]
content.list[[1]][[3]][1,]
names(content.list[[1]][[3]])
name(content.list[[1]][[3]])
name(content.list[[1]])
names(content.list[[1]])
names(content.list[[1]][3])
names(content.list[[1]][3])<-content.list[[1]][[3]][1,1]
content.list
content.list[[1]]
content.list[[1]][[3]]
content.list[[1]][3]
names(content.list[[1]][3])
content.list[[1]][3]
str(content.list[[1]][3])
names(content.list[[1]][3])
section.list
names(section.list)
section.ind
case.df[section.ind,]
case.df[section.ind,]
source('E:/SkyDrive/GitHub/urbancode-commission/html_to_md.R', encoding = 'UTF-8')
source('E:/SkyDrive/GitHub/urbancode-commission/html_to_md.R', encoding = 'UTF-8')
source('E:/SkyDrive/GitHub/urbancode-commission/html_to_md.R', encoding = 'UTF-8')
html_parse()
source('E:/SkyDrive/GitHub/urbancode-commission/html_to_md.R', encoding = 'UTF-8')
html_parse()
source('E:/SkyDrive/GitHub/urbancode-commission/html_to_md.R', encoding = 'UTF-8')
html_parse()
result<-html_parse()
source('E:/SkyDrive/GitHub/urbancode-commission/html_to_md.R', encoding = 'UTF-8')
source('E:/SkyDrive/GitHub/urbancode-commission/html_to_md.R', encoding = 'UTF-8')
result<-html_parse()
dir.name<-paste("./record/tpup/html/tpup",target,".pdf/",sep="")
flist.df<-data.frame(fname=gsub("^(.*?)\\..*","\\1",dir(dir.name)),ftype=gsub(".*\\.(.*?)$","\\1",dir(dir.name)),stringsAsFactors = FALSE)
flist.df$docuID<-as.integer(substr(flist.df[,1],5,length(flist.df[,1])))
flist.df<-subset(flist.df,flist.df[,2]=="html")
flist.df<-arrange(flist.df,flist.df[,3])
flist.df<-flist.df[complete.cases(flist.df),]
for(i in 1:nrow(flist.df)){
get_url<-paste("./record/tpup/html/tpup",target,".pdf/",flist.df[i,1],".",flist.df[i,2],sep="")
html.parse<-htmlParse(get_url,encoding="utf-8")
parse.txt<-xpathSApply(html.parse,"//div[@class='txt']",xmlValue)
parse.loc<-xpathSApply(html.parse,"//div[@class='txt']",xmlAttrs)
parse.loc.left<-as.integer(gsub(".*left:(.*?)px;.*","\\1",parse.loc[2,]))
parse.loc.top<-as.integer(gsub(".*top:(.*?)px;.*","\\1",parse.loc[2,]))
parse.df<-data.frame(txt=parse.txt,loc.left=parse.loc.left,loc.top=parse.loc.top,stringsAsFactors=FALSE)
if(!exists("parse.done")){parse.done<-parse.df}else{parse.done<-rbind(parse.done,parse.df)}
}
library(bitops)
library(RCurl)
library(XML)
library(plyr)
##target<-672
target<-671
dir.name<-paste("./record/tpup/html/tpup",target,".pdf/",sep="")
flist.df<-data.frame(fname=gsub("^(.*?)\\..*","\\1",dir(dir.name)),ftype=gsub(".*\\.(.*?)$","\\1",dir(dir.name)),stringsAsFactors = FALSE)
flist.df$docuID<-as.integer(substr(flist.df[,1],5,length(flist.df[,1])))
flist.df<-subset(flist.df,flist.df[,2]=="html")
flist.df<-arrange(flist.df,flist.df[,3])
flist.df<-flist.df[complete.cases(flist.df),]
for(i in 1:nrow(flist.df)){
get_url<-paste("./record/tpup/html/tpup",target,".pdf/",flist.df[i,1],".",flist.df[i,2],sep="")
html.parse<-htmlParse(get_url,encoding="utf-8")
parse.txt<-xpathSApply(html.parse,"//div[@class='txt']",xmlValue)
parse.loc<-xpathSApply(html.parse,"//div[@class='txt']",xmlAttrs)
parse.loc.left<-as.integer(gsub(".*left:(.*?)px;.*","\\1",parse.loc[2,]))
parse.loc.top<-as.integer(gsub(".*top:(.*?)px;.*","\\1",parse.loc[2,]))
parse.df<-data.frame(txt=parse.txt,loc.left=parse.loc.left,loc.top=parse.loc.top,stringsAsFactors=FALSE)
if(!exists("parse.done")){parse.done<-parse.df}else{parse.done<-rbind(parse.done,parse.df)}
}
parse.done
Vire(parse.done)
View(parse.done)
debug(item_parse)
result<-html_parse()
case.ind
grep("^審議事項",item.df[,1])
item.df
head(item.df)
item.df[52]
item.df[52,]
item.df[52,]
item.df
grep("^審議事項",item.df[,1])
case.cnt
case.ind
item.df[52,]
item.df
item.df[2,]
item.df8[52]
item.df[52,]
item.df[case.ind[i]:(case.ind[i+1]-1),]
case.inf
case.ind
item.df
source('E:/SkyDrive/GitHub/urbancode-commission/html_to_md.R', encoding = 'UTF-8')
nrow(item.df)
source('E:/SkyDrive/GitHub/urbancode-commission/html_to_md.R', encoding = 'UTF-8')
source('E:/SkyDrive/GitHub/urbancode-commission/html_to_md.R', encoding = 'UTF-8')
result<-html_parse()
debug(case_parse)
result<-html_parse()
grep("意見綜理表$",case.df[,1])
case.df
head(case.df)
source('E:/SkyDrive/GitHub/urbancode-commission/html_to_md.R', encoding = 'UTF-8')
source('E:/SkyDrive/GitHub/urbancode-commission/html_to_md.R', encoding = 'UTF-8')
