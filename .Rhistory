setwd("D:/GitHub/urbancode-commission")
y<-replicate(length(levels(parse.df$loc.top))*length(levels(parse.df$loc.left)),"0")
dim(y)<-c(length(levels(parse.df$loc.top)),length(levels(parse.df$loc.left)))
load("D:/GitHub/urbancode-commission/.RData")
load("D:/GitHub/urbancode-commission/.RData")
y<-replicate(length(levels(parse.df$loc.top))*length(levels(parse.df$loc.left)),"0")
dim(y)<-c(length(levels(parse.df$loc.top)),length(levels(parse.df$loc.left)))
colname
colnames
colnames(y,c(levels(parse.df$loc.top)))
colnames(y)<-levels(parse.df$loc.top)
parse.df$loc.top
levels(parse.df$loc.top)
levels(parse.df$loc.left)
colnames(y)<-levels(parse.df$loc.left)
rownames(y)<-levels(parse.df$loc.top)
levels(parse.df$loc.top)
order
order()evels(parse.df$loc.top)
order(levels(parse.df$loc.top))
order(as.character(levels(parse.df$loc.top)))
as.character(levels(parse.df$loc.top))
parse.loc.left<-gsub(".*left:(.*?);.*","\\1",parse.loc[2,])
parse.loc.top<-gsub(".*top:(.*?);.*","\\1",parse.loc[2,])
parse.loc
parse.loc.left
gsub(".*left:(.*?);.*","\\1",parse.loc[2,])
gsub(".*left:(.*?)px;.*","\\1",parse.loc[2,])
parse.loc.left<-gsub(".*left:(.*?)px;.*","\\1",parse.loc[2,])
parse.loc.top<-gsub(".*top:(.*?)px;.*","\\1",parse.loc[2,])
parse.loc.left
as.integer(parse.loc.left)
order(as.integer(parse.loc.left))
?order
sort(as.integer(parse.loc.left))
sort(parse.loc.top)
parse.loc.left<-sort(as.integer(gsub(".*left:(.*?)px;.*","\\1",parse.loc[2,])))
parse.loc.left
parse.loc.left<-as.integer(gsub(".*left:(.*?)px;.*","\\1",parse.loc[2,]))
parse.loc.top<-as.interger(gsub(".*top:(.*?)px;.*","\\1",parse.loc[2,]))
parse.df<-data.frame(txt=parse.txt,loc.left=as.factor(parse.loc.left),loc.top=as.factor(parse.loc.top),stringsAsFactors=FALSE)
parse.loc.left<-as.integer(gsub(".*left:(.*?)px;.*","\\1",parse.loc[2,]))
parse.loc.top<-as.integer(gsub(".*top:(.*?)px;.*","\\1",parse.loc[2,]))
parse.df<-data.frame(txt=parse.txt,loc.left=as.factor(parse.loc.left),loc.top=as.factor(parse.loc.top),stringsAsFactors=FALSE)
parse.df
parse.df[1,]
y<-replicate(length(levels(parse.df$loc.top))*length(levels(parse.df$loc.left)),"0")
dim(y)<-c(length(levels(parse.df$loc.top)),length(levels(parse.df$loc.left)))
colnames(y)<-sort(parse.df$loc.left)
rownames(y)<-sort(parse.df$loc.top)
parse.loc.left<-as.integer(gsub(".*left:(.*?)px;.*","\\1",parse.loc[2,]))
parse.loc.top<-as.integer(gsub(".*top:(.*?)px;.*","\\1",parse.loc[2,]))
parse.df<-data.frame(txt=parse.txt,loc.left=parse.loc.left,loc.top=parse.loc.top,stringsAsFactors=FALSE)
y<-replicate(length(parse.df$loc.top)*length(parse.df$loc.left),"0")
y
dim(y)<-c(length(parse.df$loc.top),length(parse.df$loc.left))
colnames(y)<-sort(parse.df$loc.left)
rownames(y)<-sort(parse.df$loc.top)
t
y
parse.df<-data.frame(txt=parse.txt,loc.left=parse.loc.left,loc.top=parse.loc.top,stringsAsFactors=FALSE)
y<-replicate(length(unique(parse.df$loc.top))*length(unique(parse.df$loc.left)),"0")
dim(y)<-c(length(unique(parse.df$loc.top)),length(unique(parse.df$loc.left)))
colnames(y)<-sort(unique(parse.df$loc.left))
rownames(y)<-sort(unique(parse.df$loc.top))
y
nrow(parse.df)
parse.df[1,]
y[parse.df[1,2],parse.df[1,3]]
parse.df[1,2],parse.df[1,3]
parse.df[1,2]
y["loc.left"==parse.df[1,2] & "loc.top"==parse.df[1,3]]
y["loc.left"==parse.df[1,2] & "loc.top"==parse.df[1,3],]
y["loc.left"==parse.df[1,2],]
y["loc.left"==parse.df[1,2] && "loc.top"==parse.df[1,3]]
y["loc.left"==parse.df[1,2], "loc.top"==parse.df[1,3]]
y["loc.top"==parse.df[1,3],"loc.left"==parse.df[1,2]]
y["loc.top"==parse.df[1,3],
]
loc.top"==parse.df[1,3]
"loc.top"==parse.df[1,3]
parse.df[1,3]
y["loc.top"==parse.df[1,3]&&"loc.left"==parse.df[1,2]]
parse.df[1,2]
y
y["90"]
y["90",]
y[,"90"]
y["557",90"]
y["557","90"]
y["557",]
y["577","90"]
y[parse.df[1,3],parse.df[1,2]]
parse.df[1,2]
parse.df[1,3]
y[as.character(parse.df[1,3]),as.character(parse.df[1,2])]
for(i in 1:nrow(parse.df)){
y[as.character(parse.df[i,3]),as.character(parse.df[i,2])]<-parse.df[i,1]
}
y
y[1,]
y[2.]
y[2,]
y[3,]
y[,1]
y[,2]
y[,3]
y
y[4,]
y[5,]
y[6,]
y[1,]
View(y)
View(iconv(y,"utf-8","big5")
)
y
head(y)
head(y,5)
y[4,]
y[5,]
y[3,]
y[6,]
y[7,]
y[,1]
y[,2]
y[,3]
y[7:9,3]
y[7:9,2]
y[7:9,1]
y[7:9,3]
y[,2]
y[6,]
y
source("http://bioconductor.org/biocLite.R")
biocLite()
y
get_url<-"./record/tpup/html/tpup672.pdf/page1.html"
html.parse<-htmlParse(get_url,encoding="utf-8")
parse.txt<-xpathSApply(html.parse,"//div[@class='txt']",xmlValue)
parse.loc<-xpathSApply(html.parse,"//div[@class='txt']",xmlAttrs)
parse.loc.left<-as.integer(gsub(".*left:(.*?)px;.*","\\1",parse.loc[2,]))
parse.loc.top<-as.integer(gsub(".*top:(.*?)px;.*","\\1",parse.loc[2,]))
parse.df<-data.frame(txt=parse.txt,loc.left=parse.loc.left,loc.top=parse.loc.top,stringsAsFactors=FALSE)
y<-replicate(length(unique(parse.df$loc.top))*length(unique(parse.df$loc.left)),"0")
dim(y)<-c(length(unique(parse.df$loc.top)),length(unique(parse.df$loc.left)))
colnames(y)<-sort(unique(parse.df$loc.left))
rownames(y)<-sort(unique(parse.df$loc.top))
get_url<-"./record/tpup/html/tpup672.pdf/page1.html"
html.parse<-htmlParse(get_url,encoding="utf-8")
parse.txt<-xpathSApply(html.parse,"//div[@class='txt']",xmlValue)
parse.loc<-xpathSApply(html.parse,"//div[@class='txt']",xmlAttrs)
parse.loc.left<-as.integer(gsub(".*left:(.*?)px;.*","\\1",parse.loc[2,]))
parse.loc.top<-as.integer(gsub(".*top:(.*?)px;.*","\\1",parse.loc[2,]))
parse.df<-data.frame(txt=parse.txt,loc.left=parse.loc.left,loc.top=parse.loc.top,stringsAsFactors=FALSE)
y<-replicate(length(unique(parse.df$loc.top))*length(unique(parse.df$loc.left)),"0")
dim(y)<-c(length(unique(parse.df$loc.top)),length(unique(parse.df$loc.left)))
colnames(y)<-sort(unique(parse.df$loc.left))
rownames(y)<-sort(unique(parse.df$loc.top))
for(i in 1:nrow(parse.df)){
y[as.character(parse.df[i,3]),as.character(parse.df[i,2])]<-parse.df[i,1]
}
library(rcurl)
library(Rcurl)
library(Rurl)
library(RCurl)
library(bitops)
library(RCurl)
get_url<-"./record/tpup/html/tpup672.pdf/page1.html"
html.parse<-htmlParse(get_url,encoding="utf-8")
parse.txt<-xpathSApply(html.parse,"//div[@class='txt']",xmlValue)
parse.loc<-xpathSApply(html.parse,"//div[@class='txt']",xmlAttrs)
parse.loc.left<-as.integer(gsub(".*left:(.*?)px;.*","\\1",parse.loc[2,]))
parse.loc.top<-as.integer(gsub(".*top:(.*?)px;.*","\\1",parse.loc[2,]))
parse.df<-data.frame(txt=parse.txt,loc.left=parse.loc.left,loc.top=parse.loc.top,stringsAsFactors=FALSE)
y<-replicate(length(unique(parse.df$loc.top))*length(unique(parse.df$loc.left)),"0")
dim(y)<-c(length(unique(parse.df$loc.top)),length(unique(parse.df$loc.left)))
colnames(y)<-sort(unique(parse.df$loc.left))
rownames(y)<-sort(unique(parse.df$loc.top))
for(i in 1:nrow(parse.df)){
y[as.character(parse.df[i,3]),as.character(parse.df[i,2])]<-parse.df[i,1]
}
library(XML)
get_url<-"./record/tpup/html/tpup672.pdf/page1.html"
html.parse<-htmlParse(get_url,encoding="utf-8")
parse.txt<-xpathSApply(html.parse,"//div[@class='txt']",xmlValue)
parse.loc<-xpathSApply(html.parse,"//div[@class='txt']",xmlAttrs)
parse.loc.left<-as.integer(gsub(".*left:(.*?)px;.*","\\1",parse.loc[2,]))
parse.loc.top<-as.integer(gsub(".*top:(.*?)px;.*","\\1",parse.loc[2,]))
parse.df<-data.frame(txt=parse.txt,loc.left=parse.loc.left,loc.top=parse.loc.top,stringsAsFactors=FALSE)
y<-replicate(length(unique(parse.df$loc.top))*length(unique(parse.df$loc.left)),"0")
dim(y)<-c(length(unique(parse.df$loc.top)),length(unique(parse.df$loc.left)))
colnames(y)<-sort(unique(parse.df$loc.left))
rownames(y)<-sort(unique(parse.df$loc.top))
for(i in 1:nrow(parse.df)){
y[as.character(parse.df[i,3]),as.character(parse.df[i,2])]<-parse.df[i,1]
}
y
parse.df
?repear
?repeat
??repeat
for(i in 1:nrow(parse.df)){
if(parse.df[i,2]==parse.df[i+1,2]){
parse.df[i+1,1]<-paste(parse.df[i,1],parse.df[i+1,1],sep="")
} else {
y[as.character(parse.df[i,3]),as.character(parse.df[i,2])]<-parse.df[i,1]
}
}
for(i in 1:nrow(parse.df)){
if(parse.df[i,2]==parse.df[i+1,2] && i<nrow(parse.df)){
parse.df[i+1,1]<-paste(parse.df[i,1],parse.df[i+1,1],sep="")
} else {
y[as.character(parse.df[i,3]),as.character(parse.df[i,2])]<-parse.df[i,1]
}
}
y
y[1,]
y[2,]
y[3,]
y[4],]
y[4,]
y[5,]
y[6,]
y[7,]
y[8,]
y[9,]
y[10,]
parse.df
parse.df[1,]
parse.df[4,]
get_url<-"./record/tpup/html/tpup672.pdf/page1.html"
html.parse<-htmlParse(get_url,encoding="utf-8")
parse.txt<-xpathSApply(html.parse,"//div[@class='txt']",xmlValue)
parse.loc<-xpathSApply(html.parse,"//div[@class='txt']",xmlAttrs)
parse.loc.left<-as.integer(gsub(".*left:(.*?)px;.*","\\1",parse.loc[2,]))
parse.loc.top<-as.integer(gsub(".*top:(.*?)px;.*","\\1",parse.loc[2,]))
parse.df<-data.frame(txt=parse.txt,loc.left=parse.loc.left,loc.top=parse.loc.top,stringsAsFactors=FALSE)
y<-replicate(length(unique(parse.df$loc.top))*length(unique(parse.df$loc.left)),"0")
dim(y)<-c(length(unique(parse.df$loc.top)),length(unique(parse.df$loc.left)))
colnames(y)<-sort(unique(parse.df$loc.left))
rownames(y)<-sort(unique(parse.df$loc.top))
parse.df[4,]
parse.df[5,]
parse.df[6,]
parse.df[7,]
parse.df[8,]
parse.df[9,]
parse.df[10,]
parse.df[11,]
for(i in 1:nrow(parse.df)){
y[as.character(parse.df[i,3]),as.character(parse.df[i,2])]<-parse.df[i,1]
}
y
write.csv(y)
y
write.csv(y)
y[11]
y[11,]
y[20,]
y[20,3]
count(y[20,3])
?count
length(y[20,3])
nchar
nchar(y[20,3])
nchar(y[21,3])
nchar(y[23,3])
nchar(y[24,3])
nchar(y[19,3])
nchar(y[11:20,3])
nchar(y[11:25,3])
nrow(y)
nchar(y[1:28,3])
nchar(y[1:28,3])/2
as.integer(nchar(y[1:28,3])/2)
